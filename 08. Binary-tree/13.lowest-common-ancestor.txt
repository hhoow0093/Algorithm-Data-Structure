# while curr is not none, keep iterating
# if p.val > curr.val and q.val > curr.val, move curr to right side of TreeNode
# if p.val < curr.val and q.val < curr.val, move vurr to left side of TreeNode
# else we found the lowest common ancestor 


class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        curr = root
        while curr:
            if p.val > curr.val and q.val > curr.val:
                curr = curr.right
            elif p.val < curr.val and q.val < curr.val:
                curr = curr.left
            else:
                return curr
        